{
  "name": "loader-runner",
  "description": "Runs (webpack) loaders",
  "version": "2.4.0",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "homepage": "https://github.com/webpack/loader-runner#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/loader-runner.git"
  },
  "bugs": {
    "url": "https://github.com/webpack/loader-runner/issues"
  },
  "engines": {
    "node": ">=4.3.0 <5.0.0 || >=5.10"
  },
  "main": "lib/LoaderRunner.js",
  "dist": {
    "tarball": "https://unpm.uberinternal.com/loader-runner/-/loader-runner-2.4.0.tgz",
    "shasum": "ed47066bfe534d7e84c4c7b9998c2a75607d9357"
  },
  "devDependencies": {
    "codecov.io": "^0.1.6",
    "coveralls": "^2.11.6",
    "eslint": "^3.12.2",
    "eslint-plugin-node": "^3.0.5",
    "eslint-plugin-nodeca": "^1.0.3",
    "istanbul": "^0.4.1",
    "mocha": "^3.2.0",
    "should": "^8.0.2"
  },
  "keywords": [
    "webpack",
    "loader"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "directories": {},
  "scripts": {
    "lint": "eslint lib test",
    "pretest": "npm run lint",
    "test": "mocha --reporter spec",
    "precover": "npm run lint",
    "cover": "istanbul cover node_modules/mocha/bin/_mocha",
    "travis": "npm run cover -- --report lcovonly"
  },
  "_npmVersion": "6.4.1",
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_id": "loader-runner@2.4.0",
  "gitHead": "4e817fdf48ba866cbfa2e0a91c9b720f09410422",
  "_hasShrinkwrap": false,
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/loader-runner_2.4.0_1547560015150_0.8059995476306019"
  },
  "readme": "# loader-runner\n\n``` js\nimport { runLoaders } from \"loader-runner\";\n\nrunLoaders({\n\tresource: \"/abs/path/to/file.txt?query\",\n\t// String: Absolute path to the resource (optionally including query string)\n\n\tloaders: [\"/abs/path/to/loader.js?query\"],\n\t// String[]: Absolute paths to the loaders (optionally including query string)\n\t// {loader, options}[]: Absolute paths to the loaders with options object\n\n\tcontext: { minimize: true },\n\t// Additional loader context which is used as base context\n\n\treadResource: fs.readFile.bind(fs)\n\t// A function to read the resource\n\t// Must have signature function(path, function(err, buffer))\n\n}, function(err, result) {\n\t// err: Error?\n\n\t// result.result: Buffer | String\n\t// The result\n\n\t// result.resourceBuffer: Buffer\n\t// The raw resource as Buffer (useful for SourceMaps)\n\n\t// result.cacheable: Bool\n\t// Is the result cacheable or do it require reexecution?\n\n\t// result.fileDependencies: String[]\n\t// An array of paths (files) on which the result depends on\n\n\t// result.contextDependencies: String[]\n\t// An array of paths (directories) on which the result depends on\n})\n```\n\nMore documentation following...\n\n",
  "readmeFilename": "README.md",
  "_nodeVersion": "10.15.0",
  "_shasum": "ed47066bfe534d7e84c4c7b9998c2a75607d9357",
  "_resolved": "https://unpm.uberinternal.com/loader-runner/-/loader-runner-2.4.0.tgz",
  "_from": "loader-runner@>=2.4.0 <3.0.0"
}
